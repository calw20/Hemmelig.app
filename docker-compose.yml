services:
    hemmelig:
        image: hemmeligapp/hemmelig:latest
        hostname: hemmelig
        init: true
        volumes:
            - ./data/hemmelig/:/var/tmp/hemmelig/upload/files
        environment:
            - SECRET_REDIS_HOST=hemmelig-redis # Override this for your redis host address
            - SECRET_LOCAL_HOSTNAME=0.0.0.0 # The local hostname for the fastify instance
            - SECRET_PORT=3000 # The port number for the fastify instance
            - SECRET_HOST= # Used for i.e. set cors to your domain name
            - SECRET_DISABLE_USERS=false # Disable user registration
            - SECRET_ENABLE_FILE_UPLOAD=true # Enable or disable file upload
            - SECRET_FILE_SIZE=4 # Set the total allowed upload file size in mb
            - SECRET_FORCED_LANGUAGE=en # Set the default language for the application
            - SECRET_JWT_SECRET=!changeme! # Override this for the secret signin JWT tokens for log in
            - SECRET_MAX_TEXT_SIZE=256 # The max text size for the secret. Is set in kb. i.e. 256 for 256kb
            - CLIENT_ID=<CLIENT ID> # OpenID Connect Client ID - This is all based on the values for https://github.com/fastify/fastify-oauth2
            - CLIENT_SECRET=<CLIENT SECRET> # OpenID Connect Client Secret
            - AUTH_HOST=http://keycloak # Authentication Host
            - AUTH_PATH=/realms/MyRealm/protocol/openid-connect/auth # Authentication Path
            - TOKEN_HOST=http://keycloak # Token Host
            - TOKEN_PATH=/realms/MyRealm/protocol/openid-connect/token # Token Path
            - OAUTH_CALLBACK_HOST=http://localhost:3000 # oAuth Callback host
        ports:
            - '3000:3000'
        depends_on:
            - redis
        restart: always
        stop_grace_period: 1m
        healthcheck:
            test: 'wget -O /dev/null localhost:3000 || exit 1'
            timeout: 5s
            retries: 1

    redis:
        image: redis
        hostname: hemmelig-redis
        init: true
        # Enable to make redis data persistent
        # volumes:
        #   - ./data/redis/:/data
        # command: redis-server --appendonly yes
        restart: always
        stop_grace_period: 1m
        healthcheck:
            test: 'redis-cli ping | grep PONG || exit 1'
            timeout: 5s
            retries: 1
